name: 'Git Tag'
description: 'Create a git tag or read tag information from a comment.'
inputs:
  create:
    description: 'Whether to create a tag comment comment.'
    required: true
    default: ''
  read:
    description: 'Whether to read a tag comment.'
    required: true
    default: ''
  pr-number:
    description: 'If the action is running on a PR, this input defines the PR number.'
    required: false
    default: ''
  release-candidate-suffix:
    description: 'If the action is running on a PR, this input defines git tag suffix for the release candidate tag.'
    required: false
    default: 'rc'
  tag-comment-header:
    description: 'The header on the tag comment, used to create the comment and to find existing comments.'
    required: false
    default: "## Tag created"
  workflow-run-url:
    description: 'The url of the workflow run.'
    required: false
  github-token:
    description: 'The GitHub token used for creating the tag.'
    required: true
outputs:
  tag:
    description: 'The name of the tag.'
    value: ${{ steps.read-pr-tag.outputs.release }}
runs:
  using: "composite"
  steps:
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.52.0
      if: inputs.create
      id: tag
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        WITH_V: true
        PRERELEASE_SUFFIX: pr${{ inputs.pr-number }}-${{ inputs.release-candidate-suffix }}
        PRERELEASE: ${{ inputs.pr-number != 0 }}
    - name: Find Tag Comment
      uses: peter-evans/find-comment@v2
      if: (inputs.read || inputs.create) && inputs.pr-number
      id: find-tag-comment
      with:
        issue-number: ${{ inputs.pr-number }}
        comment-author: 'github-actions[bot]'
        body-includes: ${{ inputs.tag-comment-header }}
        direction: last
    - name: Check tag was found
      uses: actions/github-script@v6
      if: inputs.read && steps.find-tag-comment.outputs.comment-id == 0
      with:
        script: |
          core.setFailed('PR tag comment not found! Try creating one first.')
    - name: Read PR Tag
      if: inputs.read
      id: read-pr-tag
      shell: bash
      run: |
        cat > .tmp-comment-body << 'EOT'
        ${{ steps.find-tag-comment.outputs.comment-body }}
        EOT
        release="$( grep "Release: " .tmp-comment-body | sed -E "s/Release: \[(.*)\].*/\1/" | xargs )"

        echo "DEBUG :: release = ${release}"

        echo "release=${release}" >> "${GITHUB_OUTPUT}"
    - name: Prepare tag PR comment content
      id: tag-comment
      if: inputs.create && inputs.pr-number
      env:
        release: ${{ steps.tag.outputs.new_tag }}
        found_comment_id: ${{ steps.find-tag-comment.outputs.comment-id }}
        github_run_id: ${{ github.run_id }}
        github_server_url: (${{ github.server_url }}
      shell: bash
      run: |
        echo "tag_comment_body<<EOT" >> "${GITHUB_OUTPUT}"
        echo "Tag \`${release}\`" >> "${GITHUB_OUTPUT}"
        echo "" >> "${GITHUB_OUTPUT}"
        echo "<br/>" >> "${GITHUB_OUTPUT}"
        echo "" >> "${GITHUB_OUTPUT}"
        echo "(Please don't label the PR with 'deploy' before this is updated with the release details)" >> "${GITHUB_OUTPUT}"
        echo "EOT" >> "${GITHUB_OUTPUT}"

        footer="<sub><sup>*Generated by [workflow ${{ github.run_id }}](${{ inputs.workflow-run-url }})*"
        if [[ "${{ steps.find-tag-comment.outputs.comment-id }}" != "" ]]; then
          echo "DEBUG :: comment updated"
          updated="(comment updated ♻️)"
        fi
        echo "footer=${footer} ${updated}</sup></sub>" >> "${GITHUB_OUTPUT}"
    - name: Render tag PR comment template
      uses: chuhlomin/render-template@v1.6
      id: template
      if: inputs.create && inputs.pr-number
      with:
        template: .github/templates/release-comment.md
        vars: |
          header: "${{ inputs.tag-comment-header }}"
          release: "not-yet-created"
          body: "${{ steps.tag-comment.outputs.tag_comment_body }}"
          footer: "${{ steps.tag-comment.outputs.footer }}"
    - name: Create tag PR comment
      uses: peter-evans/create-or-update-comment@v2
      if: inputs.create && inputs.pr-number
      with:
        edit-mode: replace
        issue-number: ${{ inputs.pr-number }}
        comment-id: ${{ steps.find-tag-comment.outputs.comment-id }}
        body: ${{ steps.template.outputs.result }}
